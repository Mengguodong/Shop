//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SFO2O.References.IndexingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRequestDTO", Namespace="http://schemas.datacontract.org/2004/07/SFO2O.Service.Model.Indexing")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SFO2O.References.IndexingService.ProductRequestDTO))]
    public partial class BaseRequestDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DescendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowsCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Descending {
            get {
                return this.DescendingField;
            }
            set {
                if ((this.DescendingField.Equals(value) != true)) {
                    this.DescendingField = value;
                    this.RaisePropertyChanged("Descending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyWord {
            get {
                return this.KeyWordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyWordField, value) != true)) {
                    this.KeyWordField = value;
                    this.RaisePropertyChanged("KeyWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Page {
            get {
                return this.PageField;
            }
            set {
                if ((this.PageField.Equals(value) != true)) {
                    this.PageField = value;
                    this.RaisePropertyChanged("Page");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowsCount {
            get {
                return this.RowsCountField;
            }
            set {
                if ((this.RowsCountField.Equals(value) != true)) {
                    this.RowsCountField = value;
                    this.RaisePropertyChanged("RowsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductRequestDTO", Namespace="http://schemas.datacontract.org/2004/07/SFO2O.Service.Model.Indexing")]
    [System.SerializableAttribute()]
    public partial class ProductRequestDTO : SFO2O.References.IndexingService.BaseRequestDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> FilterQueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkuMainValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkuSubValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryIdField, value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> FilterQuery {
            get {
                return this.FilterQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterQueryField, value) != true)) {
                    this.FilterQueryField = value;
                    this.RaisePropertyChanged("FilterQuery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageVersion {
            get {
                return this.LanguageVersionField;
            }
            set {
                if ((this.LanguageVersionField.Equals(value) != true)) {
                    this.LanguageVersionField = value;
                    this.RaisePropertyChanged("LanguageVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkuMainValue {
            get {
                return this.SkuMainValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SkuMainValueField, value) != true)) {
                    this.SkuMainValueField = value;
                    this.RaisePropertyChanged("SkuMainValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SkuSubValue {
            get {
                return this.SkuSubValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SkuSubValueField, value) != true)) {
                    this.SkuSubValueField = value;
                    this.RaisePropertyChanged("SkuSubValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductResultDTO", Namespace="http://schemas.datacontract.org/2004/07/SFO2O.Service.Model.Indexing")]
    [System.SerializableAttribute()]
    public partial class ProductResultDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SFO2O.References.IndexingService.ProductDTO[] ProductListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasError {
            get {
                return this.HasErrorField;
            }
            set {
                if ((this.HasErrorField.Equals(value) != true)) {
                    this.HasErrorField = value;
                    this.RaisePropertyChanged("HasError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SFO2O.References.IndexingService.ProductDTO[] ProductList {
            get {
                return this.ProductListField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductListField, value) != true)) {
                    this.ProductListField = value;
                    this.RaisePropertyChanged("ProductList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/SFO2O.Service.Model.Indexing")]
    [System.SerializableAttribute()]
    public partial class ProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryIdSource {
            get {
                return this.CategoryIdSourceField;
            }
            set {
                if ((this.CategoryIdSourceField.Equals(value) != true)) {
                    this.CategoryIdSourceField = value;
                    this.RaisePropertyChanged("CategoryIdSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IndexingService.IIndexingService")]
    public interface IIndexingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIndexingService/SearchProductResult", ReplyAction="http://tempuri.org/IIndexingService/SearchProductResultResponse")]
        SFO2O.References.IndexingService.ProductResultDTO SearchProductResult(SFO2O.References.IndexingService.ProductRequestDTO requestinfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIndexingServiceChannel : SFO2O.References.IndexingService.IIndexingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IndexingServiceClient : System.ServiceModel.ClientBase<SFO2O.References.IndexingService.IIndexingService>, SFO2O.References.IndexingService.IIndexingService {
        
        public IndexingServiceClient() {
        }
        
        public IndexingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IndexingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IndexingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IndexingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SFO2O.References.IndexingService.ProductResultDTO SearchProductResult(SFO2O.References.IndexingService.ProductRequestDTO requestinfo) {
            return base.Channel.SearchProductResult(requestinfo);
        }
    }
}
